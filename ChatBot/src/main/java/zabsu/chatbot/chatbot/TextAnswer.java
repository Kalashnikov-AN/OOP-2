package zabsu.chatbot.chatbot;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.regex.Pattern;

/**
 * Класс TextAnswer реализует интерфейс {@link IAnswer} и предоставляет реализацию текстового ответа
 * для чат-бота.
 * <p>
 * Данный класс хранит список возможных ответов и использует регулярное выражение для проверки,
 * соответствует ли входящая строка определённому шаблону. При вызове метода {@code answer(String)}
 * возвращается случайный ответ из списка.
 * </p>
 */
public class TextAnswer implements IAnswer{

    /**
     * Объект Random используется для генерации случайного индекса ответа.
     */
    Random rnd = new Random();

    /**
     * Регулярное выражение для определения, подходит ли входящая строка для данного текстового ответа.
     */
    public Pattern reg;

    /**
     * Список возможных текстовых ответов.
     */
    public List<String> answers = new ArrayList<>();

    /**
     * Конструктор класса.
     * <p>
     * Инициализирует список ответов и устанавливает регулярное выражение, по которому
     * будет проверяться входящая строка.
     * </p>
     *
     * @param answers список возможных ответов
     * @param reg     регулярное выражение для проверки входящей строки
     */
    public TextAnswer(List<String> answers, Pattern reg){
        this.answers = answers;
        this.reg = reg;
    }

    /**
     * Проверяет, соответствует ли входящая строка заданному регулярному выражению.
     * <p>
     * Метод используется для определения, можно ли применить данный тип ответа к входящему сообщению.
     * </p>
     *
     * @param s входящая строка для проверки
     * @return {@code true}, если строка соответствует шаблону, иначе {@code false}
     */
    @Override
    public boolean is_matched(String s) {
        return reg.matcher(s).matches();
    }

    /**
     * Возвращает случайный текстовый ответ из списка доступных ответов.
     * <p>
     * Предполагается, что метод вызывается только в том случае, если входящая строка удовлетворяет условию.
     * </p>
     *
     * @param s входящая строка (не используется для генерации ответа, но предусмотрена в интерфейсе)
     * @return один из возможных ответов, выбранный случайным образом
     */
    @Override
    public String answer(String s) {
        return answers.get(rnd.nextInt(answers.size()));
    }
}
